---
# This workflow suggests the next version bump for changed API folders and database based on PR labels and the latest tag.

name: Suggest Version Bump

permissions:
  contents: read
  statuses: read
  pull-requests: read

on:
  pull_request:
    branches:
      - main
    paths:
      - 'database/**/*.sql'
  workflow_call:
    outputs:
      api_next_version:
        description: 'Suggested next API version'
        value: ${{ jobs.analyze.outputs.api_next_version }}
      api_bump_type:
        description: 'API version bump type'
        value: ${{ jobs.analyze.outputs.api_bump }}
      api_latest_tag:
        description: 'Latest API tag'
        value: ${{ jobs.analyze.outputs.api_latest_tag }}
      database_next_version:
        description: 'Suggested next database version'
        value: ${{ jobs.analyze.outputs.database_next_version }}
      database_bump_type:
        description: 'Database version bump type'
        value: ${{ jobs.analyze.outputs.database_bump }}
      database_latest_tag:
        description: 'Latest database tag'
        value: ${{ jobs.analyze.outputs.database_latest_tag }}

jobs:
  suggest:
    uses: ./.github/workflows/detect-changed-versions.yml

  labels:
    uses: ./.github/workflows/get-pr-labels.yml

  analyze:
    name: Analyze ${{ matrix.component }} Changes
    needs:
      - suggest
      - labels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - component: api
            tag_prefix: 'api-v'
          - component: database
            tag_prefix: 'database-v'
    outputs:
      api_bump: ${{ steps.api.outputs.bump }}
      api_latest_tag: ${{ steps.api.outputs.latest_tag }}
      api_next_version: ${{ steps.api.outputs.next_version }}
      database_bump: ${{ steps.database.outputs.bump }}
      database_latest_tag: ${{ steps.database.outputs.latest_tag }}
      database_next_version: ${{ steps.database.outputs.next_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Process version bump
        id: process
        run: |
          LABELS="${{ needs.labels.outputs.labels }}"
          BUMP="patch"
          echo "$LABELS" | grep -q 'type: feature' && BUMP="minor"
          echo "$LABELS" | grep -q 'type: security' && BUMP="minor"
          echo "$LABELS" | grep -q 'special: breaking change' && BUMP="major"

          TAG=$(git tag --list '${{ matrix.tag_prefix }}*' --sort=-v:refname | head -n1)
          [ -z "$TAG" ] && TAG="${{ matrix.tag_prefix }}0.0.0"

          VERSION=$(echo "$TAG" | sed -E "s/^${{ matrix.tag_prefix }}([0-9]+\.[0-9]+\.[0-9]+).*/\1/")
          PRERELEASE=$(echo "$TAG" | sed -nE "s/^${{ matrix.tag_prefix }}[0-9]+\.[0-9]+\.[0-9]+(-[A-Za-z0-9.-]+)?$/\1/p")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          case "$BUMP" in
            major) MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0 ;;
            minor) MINOR=$((MINOR + 1)); PATCH=0 ;;
            patch) PATCH=$((PATCH + 1)) ;;
          esac

          NEXT_VERSION="${{ matrix.tag_prefix }}${MAJOR}.${MINOR}.${PATCH}${PRERELEASE}"

          {
            echo "bump=$BUMP"
            echo "latest_tag=$TAG"
            echo "next_version=$NEXT_VERSION"
          } >> "$GITHUB_OUTPUT"

      - name: Set component outputs
        id: ${{ matrix.component }}
        run: |
          {
            echo "bump=${{ steps.process.outputs.bump }}"
            echo "latest_tag=${{ steps.process.outputs.latest_tag }}"
            echo "next_version=${{ steps.process.outputs.next_version }}"
          } >> "$GITHUB_OUTPUT"

  report:
    name: Report Summary
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - name: Generate summary
        run: |
          {
            echo "## ðŸš€ Suggested Version Bumps"
            echo "| Component | Bump Type | Latest Tag | Next Version |"
            echo "|-----------|-----------|------------|--------------|"
            echo "| API | ${{ needs.analyze.outputs.api_bump }} | \`${{ needs.analyze.outputs.api_latest_tag }}\` | \`${{ needs.analyze.outputs.api_next_version }}\` |"
            echo "| Database | ${{ needs.analyze.outputs.database_bump }} | \`${{ needs.analyze.outputs.database_latest_tag }}\` | \`${{ needs.analyze.outputs.database_next_version }}\` |"
          } >> "$GITHUB_STEP_SUMMARY"
